#!/usr/bin/env bash
# vi: ft=bash
# shellcheck shell=bash disable=SC1091
set -e -u -o pipefail

## source toolset
source toolset || exit 1


## Print help output
function usage {
    cat <<EOF

    Whitelist a mail domain in AWS SES

    This script registers or retrieves the status and required DNS records
    for SES domain whitelisting

    ${TOOLSET_SCRIPT_NAME:-${0}} --domain <fqdn> --region <aws region>

    Arguments:
      --domain   - The domain name to start ses verification for.

    Options:
      --region   - The access key id of the aws account

    Example:
      ${TOOLSET_SCRIPT_NAME:-${0}} --domain example.com --region eu-west-1

EOF

    exit "${1:-0}"
}


function main {
    if var::lt "${#}" 1
    then
        usage 0
    fi

    local region="${AWS_REGION:-"${AWS_DEFAULT_REGION:-"eu-west-1"}"}" ## Use eu-west-1 as default region
    local domain=""
    local arguments=""

    ## Parse command line arguments
    while [[ "${1:-""}" != "" ]]
    do
        case "${1}"
        in
	        --help|-h)
	            usage 0
	        ;;

	        --domain|-d)
                domain="${2:-""}"
                shift
	        ;;

            --region)
                  region="${2:-""}"
                  shift
            ;;
            *)
                arguments="${arguments} ${1:-""} ${2:-""}"
                shift
            ;;
        esac

        shift
    done

    if [[ -z "${domain}" ]]
    then
        usage 0
    fi

    depends::check_list "jq" "aws" || return 1

    if ! aws::ses::whitelist_domain "${domain}" "${region}" "${arguments}"
    then
        exit::error "Failed to setup SES for domain repo ${domain}"
    fi
}


main "${@}"

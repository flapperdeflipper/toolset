#!/usr/bin/env toolset
# vi: ft=bash
# shellcheck shell=bash


## Print help output
function usage {
    cat <<EOF

    Create a dhparam file

    This script generates a dhparam.pem file that is needed for ssl setups.

    ${TOOLSET_SCRIPT_NAME} -f <filename> -k 4096

    Optional arguments:
    -f, --filename    - The filename to write the key to. (Default: ./dhparam.pem)
    -k, --keysize     - The size to use for the key.      (Default: 4096)

    Example:
      ${TOOLSET_SCRIPT_NAME} --keysize 4096 -f ./dhparam.pem

EOF

    exit 0
}



function main {
    local filename=./dhparam.pem
    local -i keysize=4096

    ## check for input
    var::lt "${#}" 1 && usage

    ## check for dependencies
    depends::check::silent "openssl" || return 1

    ## Parse command line arguments
    while [ "${1:-""}" != "" ]
    do
       case "${1}" in
           -h|--help)
               usage
          ;;

           -f|--filename)
               filename="${2:-"${filename}"}"
               shift
           ;;

           -k|--keysize)
               keysize="${2:-"${keysize}"}"
               shift
           ;;

           *)
               usage
           ;;

       esac

       shift || true
    done

    ## Get the secret name from filename if not explicitly given
    if var::gt "${keysize}" 4096
    then
        log::error "${FUNCNAME[0]}: Keysize can't be (as for now) larger than 4096"
        return 1
    fi

    if fs::is_file "${filename}"
    then
        log::info "Filename ${filename} already exists! Overwrite?"

        if ! interact::prompt_bool ; then
            log::warning "${FUNCNAME[0]}: Cancelled!"
            return 1
        fi
    fi

    log::debug "Generating dhparam file ${filename} with size ${keysize}"

    if ! openssl dhparam -out "${filename}" "${keysize}"
    then
        log::error "${FUNCNAME[0]}: Failed to create dhparam file in ${filename}"
        return 1
    fi

    log::info "Created dhparam file as ${filename}"

    return 0
}

main "${@}"


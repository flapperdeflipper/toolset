#!/usr/bin/env bash
# vi: ft=bash
# shellcheck shell=bash disable=SC1091
set -e -u -o pipefail

## source toolset
source toolset || exit 1


## Print help output
function usage {
    cat <<EOF

    Start a shell or run a command in a k8s pod

    ${TOOLSET_SCRIPT_NAME:-${0}} -r <regex> -n <namespace> -c <command>

    Arguments:
    -r, --regex       The regex to match (uses the first pod in the resultset)
    -n, --namespace   The namespace to search for pods in
    -c, --command     The command to run on the pod

    Example:
      ${TOOLSET_SCRIPT_NAME:-${0}} -r somepod -n kube-system -c bash

EOF

    exit 0
}

function main {
    if [[ "${#}" -eq 0 ]] ; then
        usage
    fi

    local cmd=""
    local regex=""
    local namespace=default

    ## Parse command line arguments
    while [[ "${1:-""}" != "" ]]
    do
        case "$1"
        in
           -h|--help)
                usage
            ;;
            -n|--namespace)
                namespace="${2:-""}"
                shift
            ;;
            -r|--regex)
                regex="${2:-""}"
                shift
            ;;
            -c|--command)
                cmd="${2:-""}"
                shift
            ;;
            *)
                exit::error "Unknown input: ${1} ${2}"
            ;;
        esac

        shift || true
    done

    var::is_empty "${namespace}" && usage
    var::is_empty "${regex}"     && regex="."
    var::is_empty "${cmd}"       && cmd="/bin/sh"

    log::info "Retrieving pod matching ${regex}"

    if ! pod="$( \
        k8s::grep \
            -n "${namespace}" \
            -r "${regex}" 2>/dev/null \
        | tail -n 1 \
        | awk '{print $1}' \
    )"
    then
        exit::error "Failed to retrieve pod"
    fi

    if [[ -z "${pod}" ]]
    then
        exit::warning "No pods found in namespace ${namespace} matching regex \"${regex}\""
    fi

    log::info "Running command ${cmd} on ${pod}"

    # shellcheck disable=SC2086
    if ! kubectl -n "${namespace}" exec -ti "${pod}" -- ${cmd}
    then
        exit::error "Failed to run command ${cmd} on pod ${pod}"
    fi

    exit::info "Exit"
}

main "${@}"

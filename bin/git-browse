#!/usr/bin/env toolset
# vi: ft=bash
# shellcheck shell=bash

function usage() {
    cat <<EOF

    Open main links of your current git repo in your browser

    This script opens frequently used urls for multiple git providers in your
    browser. It can be used to speed up navigation the web based functionality
    of a corresponding local git repository.

    Arguments:
        generic)
                --jira             - Show jira issue based on branch

        gitlab)
                --pipe|-ci         - Show pipelines
                --ci-visual|-v     - Show ci visualization
                --ci-lint|-cl      - Show ci linter
                --ci-merged|-cm    - Show ci merged yaml
                --ci|--config|-c   - Show ci settings
                --mr|--pr|-p       - Show merge requests
                --cr|--registry|-r - Show container registry
                --issues|-i        - Show issues

         github)
                --pipe|-a          - Show actions
                --ci|--config|-c   - Show actions settings
                --mr|-m|--pr|-p    - Show pull requests
                --cr|--registry|-r - Show packages
                --issues|-i        - Show issues

         bitbucket)
                --pipe|-a          - Show pipelines
                --ci|--config|-c   - Show pipeline settings
                --mr|--pr|-p       - Show pull requests
                --issues|-i        - Show issues

EOF
    exit 1
}

function git::provider_uri {
    local provider="${1}"
    local branch="${2}"
    local arguments="${3}"

    case "${provider}" in
        gitlab)
            case "${arguments}" in
                --tags|-t)
                    printf -- "-/tags"
                    ;;
                --branch|-b|--branches)
                    printf -- "-/branches"
                    ;;
                --pipe|-ci)
                    printf -- "pipelines"
                    ;;
                --ci-visual|-v)
                    printf -- "-/ci/editor?tab=1"
                    ;;
                --ci-lint|-cl)
                    printf -- "-/ci/editor?tab=2"
                    ;;
                --ci-merged|-cm)
                    printf -- "-/ci/editor?tab=2"
                    ;;
                --mr|--pr|-p)
                    printf -- "merge_requests"
                    ;;
                --mymr)
                    printf -- "merge_requests?scope=all&state=opened&author_username=${GIT_USERNAME:-}"
                    ;;
                --ci|--config|-c)
                    printf -- "-/settings/ci_cd"
                    ;;
                --cr|--registry|-r)
                    printf -- "container_registry"
                    ;;
                --root)
                    printf -- ""
                    ;;
                --issues|-i)
                    printf -- "-/issues"
                    ;;

                *)
                    var::equals "${arguments}" "--master" && branch="master"

                    local abspath
                          abspath="$( realpath --relative-to="$( git::basedir )" . )"

                    printf -- "-/tree/${branch}/${abspath}"
                    ;;
            esac
            ;;

         github)
            case "${arguments}" in
                --pipe|-a)
                    printf "actions"
                    ;;
                --mr|-m|--pr|-p)
                    printf "pulls"
                    ;;
                --ci|--config|-c)
                    printf "settings/actions"
                    ;;
                --cr|--registry|-r)
                    printf "packages"
                    ;;
                --issues|-i)
                    printf "issues"
                    ;;
                *)
                    printf ""
                    ;;
            esac
            ;;

         *)
             log::error "${FUNCNAME[0]}: Provider ${provider} unknown"
             return 1
         ;;
    esac
}


function main {
    local uri
    local baselink

    if var::gt "${#}" 1 \
    || interact::usage "${@}"
    then
        usage
    fi

    local input="${1:-""}"

    local baselink
    local branch

    if ! baselink="$( git::baseurl 2>/dev/null )" \
    && (
        interact::in_args "--mr" "${@}" \
     || interact::in_args "--mymr" "${@}"
    )
    then
        open "https://gitlab.com/dashboard/merge_requests?assignee_username=$GIT_USERNAME"
        exit 0
    fi

    branch="$( git::branch )"

    if [[ "${input}" == "--jira" ]] \
    || [[ "${input}" == "-j"     ]]
    then
        exec git-jira
        exit "${?}"
    fi

    if var::matches "${baselink}" "github"
    then
          uri="$( git::provider_uri "github" "${branch}" "${input}" )"

    elif var::matches "${baselink}" "gitlab"
    then
          uri="$( git::provider_uri "gitlab" "${branch}" "${input}" )"

    else
          exit::error "Failed to determine git provider"
    fi

    /usr/bin/open "${baselink}/${uri}"

}


main "${@}"

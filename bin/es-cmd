#!/usr/bin/env bash
# vi: ft=bash
# shellcheck shell=bash disable=SC1091
set -e -u -o pipefail

## source toolset
source toolset || exit 1


## Print help output
function usage {
    cat <<EOF

    Execute commands on an elasticsearch service

    ${TOOLSET_SCRIPT_NAME:-${0}} <method> <url> [<data>]

   Arguments:
    -h, --help   - Show this menu

    Example:
      ${TOOLSET_SCRIPT_NAME:-${0}} GET /_cluster/allocation/explain?pretty

EOF

    exit 0
}


function main {
    if var::lt "${#}" 2 \
    || interact::usage "${@}"
    then
        usage
    fi

    ## Get arguments
    local -r method="${1:-""}"; shift
    local -r url="${1:-""}";    shift
    local -r data="${*}"
    local -a cmd

    ## Get ES_HOST var or use localhost instead
    local es_host="${ES_HOST:-localhost:9200}"

    log::info "Sending: ${method} ${es_host}${url}"

    cmd=(
        curl \
        -qs \
        -N \
        -H 'Content-Type: application/json'
        -X "${method}"
        "${es_host}${url}"
    )

    if [[ -n "${ES_PASSWORD}" ]] \
    && [[ -n "${ES_USERNAME}" ]]
    then
        cmd+=(--user "${ES_USERNAME}:${ES_PASSWORD}")
    fi

    if [[ -n "${data}" ]]
    then
        echo "${data}" | jq empty &>/dev/null \
            || exit::error "Invalid json!"

        cmd+=(-d "${data}")

        log::info "Data:"
        log::info "${data}"
    fi

    if [[ "${method}" == "TRY" ]] \
    || [[ "${method}" == "try" ]]
    then
        exit::info "${cmd[*]}"
    fi

    exec command "${cmd[@]}"

    echo
}

main "${@}"

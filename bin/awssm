#!/usr/bin/env bash
# vi: ft=bash
# shellcheck shell=bash disable=SC1091
set -e -u -o pipefail

## source toolset
source toolset || exit 1


## Print help output
function usage() {
    cat <<EOF

    Connect with ssm systems manager to an ec2 instance.

    This script is used to manage ec2 instances on AWS over SSM

    Usage:
      ${TOOLSET_SCRIPT_NAME:-${0}} --instance <instance> <arguments>

    Required arguments:
      --instance, -i       - The host to connect to with SSH
                             (internal hostname, ip address or aws instance id)

    Options:
      --dry-run            - Don't do, just fake it

    All other arguments are fed to aws cli

    Example:
      ${TOOLSET_SCRIPT_NAME:-${0}} --instance i-0f8d56785c4959883
EOF

   exit "${1:-0}"
}

function main() {
    if var::lt "${#}" 1
    then
        usage 0
    fi

    local arguments=""
    local dryrun=""
    local instance=""

    ## Parse command line arguments
    while [[ "${1:-}" != "" ]]
    do
        case "${1}" in
            -h|--help)
                usage
            ;;

            -i|--instance)
                instance="${2}"
                shift
            ;;

            --dry-run)
                dryrun="echo "
            ;;

            *)
                arguments="${arguments} ${1:-} ${2:-}"
                shift
            ;;

        esac

        shift || true
    done

    ## Exit if no instance given
    var::is_empty "${instance}" && usage

    ## Check for dependencies
    depends::check_list "jq" "aws" || exit 1

    if [[ -n "${dryrun}" ]]
    then
       log::warning "Dry-run detected!"
    fi

    log::info "Connecting to ${instance}"

    ${dryrun} aws::ssm::session "${instance}" "${arguments}"
}

main "$@"

#!/usr/bin/env bash
# vi: ft=bash
# shellcheck shell=bash disable=SC1091,SC2154,SC2310,SC2312
set -e -u -o pipefail

## source toolset
source toolset || exit 1

####################################################################
# bl - BLACKLIST CHECK UNIX/LINUX UTILITY                          #
# copyright: (c) 2014 Anders Aarvik                                #
# author: Anders Aarvik (aarvik92@gmail.com) and contributors      #
# license: MIT licensed. See LICENSE                               #
# description: I was just a bit tired of web interfaces            #
####################################################################

##
## blacklists - grabbed from https://hetrixtools.com/blacklist-check
##
declare -a blacklists=(
    0spam.fusionzero.com
    access.redhawk.org
    all.s5h.net
    all.spamrats.com
    aspews.ext.sorbs.net
    backscatter.spameatingmonkey.net
    b.barracudacentral.org
    bb.barracudacentral.org
    black.junkemailfilter.com
    bl.blocklist.de
    bl.drmx.org
    bl.konstant.no
    bl.mailspike.net
    bl.nosolicitado.org
    bl.nszones.com
    block.dnsbl.sorbs.net
    bl.rbl.scrolloutf1.com
    bl.scientificspam.net
    bl.score.senderscore.com
    bl.spamcop.net
    bl.spameatingmonkey.net
    bl.suomispam.net
    bsb.empty.us
    cart00ney.surriel.com
    cbl.abuseat.org
    cbl.anti-spam.org.cn
    cblless.anti-spam.org.cn
    cblplus.anti-spam.org.cn
    cdl.anti-spam.org.cn
    combined.rbl.msrbl.net
    db.wpbl.info
    dnsbl-1.uceprotect.net
    dnsbl-2.uceprotect.net
    dnsbl-3.uceprotect.net
    dnsbl.cobion.com
    dnsbl.dronebl.org
    dnsbl.justspam.org
    dnsbl.kempt.net
    dnsbl.net.ua
    dnsbl.rv-soft.info
    dnsbl.rymsho.ru
    dnsbl.sorbs.net
    dnsbl.spfbl.net
    dnsbl.tornevall.org
    dnsbl.zapbl.net
    dnsrbl.org
    dnsrbl.swinog.ch
    dul.dnsbl.sorbs.net
    dyna.spamrats.com
    dyn.nszones.com
    escalations.dnsbl.sorbs.net
    fnrbl.fast.net
    hostkarma.junkemailfilter.com
    http.dnsbl.sorbs.net
    images.rbl.msrbl.net
    invaluement
    ips.backscatterer.org
    ix.dnsbl.manitu.net
    l1.bbfh.ext.sorbs.net
    l2.bbfh.ext.sorbs.net
    l4.bbfh.ext.sorbs.net
    list.bbfh.org
    mail-abuse.blacklist.jippg.org
    misc.dnsbl.sorbs.net
    multi.surbl.org
    netscan.rbl.blockedservers.com
    new.spam.dnsbl.sorbs.net
    noptr.spamrats.com
    old.spam.dnsbl.sorbs.net
    pbl.spamhaus.org
    phishing.rbl.msrbl.net
    pofon.foobar.hu
    problems.dnsbl.sorbs.net
    proxies.dnsbl.sorbs.net
    psbl.surriel.com
    rbl2.triumf.ca
    rbl.abuse.ro
    rbl.blockedservers.com
    rbl.dns-servicios.com
    rbl.efnet.org
    rbl.efnetrbl.org
    rbl.interserver.net
    rbl.megarbl.net
    rbl.realtimeblacklist.com
    recent.spam.dnsbl.sorbs.net
    relays.dnsbl.sorbs.net
    rep.mailspike.net
    safe.dnsbl.sorbs.net
    sbl.spamhaus.org
    smtp.dnsbl.sorbs.net
    socks.dnsbl.sorbs.net
    spam.dnsbl.anonmails.de
    spam.dnsbl.sorbs.net
    spamlist.or.kr
    spam.pedantic.org
    spam.rbl.blockedservers.com
    spamrbl.imp.ch
    spam.rbl.msrbl.net
    spamsources.fabel.dk
    spam.spamrats.com
    srn.surgate.net
    stabl.rbl.webiron.net
    st.technovision.dk
    talosintelligence.com
    torexit.dan.me.uk
    truncate.gbudb.net
    ubl.unsubscore.com
    virus.rbl.msrbl.net
    web.dnsbl.sorbs.net
    web.rbl.msrbl.net
    xbl.spamhaus.org
    zen.spamhaus.org
    z.mailspike.net
    zombie.dnsbl.sorbs.net
)


##
## reverse_ip
##
function reverse_ip {
    local ip="${1}"
    local reverse

    reverse="$( \
        echo "${ip}" \
        | sed -ne 's#^\([0-9]\{1,3\}\)\.\([0-9]\{1,3\}\)\.\([0-9]\{1,3\}\)\.\([0-9]\{1,3\}\)\$#\4.\3.\2.\1#p' \
    )"

    if [[ -z "${reverse}" ]]
    then
        return 1
    fi

    echo "${reverse}"
}


##
## check_blacklists
##
function check_blacklists {
    local reverse="${1}"; shift
    local listed

    for bl in "${blacklists[@]}"
    do
        printf "%-45s" "${cyan}${bl}${reset}."

        listed="$( dig +short -t a "${reverse}.${bl}." )"

        if [[ -z "${listed}" ]]
        then
            echo "[not listed]" | cecho "${bold}${green}"
        else
            if [[ "${listed}" =~ "timed out" ]]
            then
                echo "[timed out]" | cecho "${yellow}"
            else
                echo "[blacklisted]" | cecho "${bold}${red}"
            fi
        fi
    done
}


##
## cecho
##
function cecho {
    color="${1:-${reset}}"

    echo -ne "$( eval echo "${color}" )"
    cat

    echo -ne "${reset}"
}


##
## Print help output
##
function usage {
    cat <<EOF

    Check an ip or host for blacklist entries

    This script checks an ip or hostname agains a multitude of dnsbl blacklists
    to ensure the ip is not blacklisted.

    ${TOOLSET_SCRIPT_NAME:-${0}} <ip> [-h|--help]

    Arguments:
      -h, --help  - Show this menu

    Example:
      ${TOOLSET_SCRIPT_NAME:-${0}} 1.2.3.4
      ${TOOLSET_SCRIPT_NAME:-${0}} google.com

EOF

    exit 0
}


##
## main
##
function main {
    if interact::usage "${@}" \
    || [[ "${#}" != 1 ]]
    then
        usage
    fi

    local input="${1}"; shift
    local reverse
    local ip_address

    if ! net::is_fqdn "${input}"
    then
        ip_address="${input}"
        reverse="$( reverse_ip "${input}" )" \
            || exit::error "IP not valid."

    else
        if ! ip_address="$( host "${input}" | head -n1 | awk '{print $4}' )"
        then
            exit::error "Failed to resolve hostname to an ip"
        fi

        reverse="$( reverse_ip "${ip_address}" )" \
            || exit::error "IP not valid or domain could not be resolved."
    fi

    local reverse_dns
          reverse_dns="$( dig +short -x "${ip_address}" )"

    log::info "Input: ${input}"
    log::info "Reverse: ${reverse_dns}"

    echo

    check_blacklists "${ip_address}" "${reverse}"
}


main "${@}"
